# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'DaqGUIVersionSix.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import numpy as np
import os
from datetime import datetime
from PyQt5 import QtCore, QtGui, QtWidgets
#from daq import *




class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(748, 600)
        
        #Define central widget to allow main window to open
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        
        #Define waferInputLayout
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(10, 69, 731, 51))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.waferInputLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.waferInputLayout.setContentsMargins(0, 0, 0, 0)
        self.waferInputLayout.setObjectName("waferInputLayout")
        
        #Define waferInput
        self.waferInput = QtWidgets.QLineEdit(self.horizontalLayoutWidget)
        self.waferInput.setObjectName("waferInput")
        self.waferInputLayout.addWidget(self.waferInput)
        
        #Define dieInput
        self.dieInput = QtWidgets.QLineEdit(self.horizontalLayoutWidget)
        self.dieInput.setObjectName("dieInput")
        self.waferInputLayout.addWidget(self.dieInput)
        
        #Define initialsInput
        self.initialsInput = QtWidgets.QLineEdit(self.horizontalLayoutWidget)
        self.initialsInput.setObjectName("initialsInput")
        self.waferInputLayout.addWidget(self.initialsInput)
        
        #Define bookInput
        self.bookInput = QtWidgets.QLineEdit(self.horizontalLayoutWidget)
        self.bookInput.setObjectName("bookInput")
        self.waferInputLayout.addWidget(self.bookInput)
        
        #Define pageInput
        self.pageInput = QtWidgets.QLineEdit(self.horizontalLayoutWidget)
        self.pageInput.setObjectName("pageInput")
        self.waferInputLayout.addWidget(self.pageInput)
        
        #Define waferLabelLayout
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(10, 50, 731, 31))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")
        self.waferLabelLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.waferLabelLayout.setContentsMargins(0, 0, 0, 0)
        self.waferLabelLayout.setObjectName("waferLabelLayout")
        
        #Define waferLAbel
        self.waferLabel = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.waferLabel.setObjectName("waferLabel")
        self.waferLabelLayout.addWidget(self.waferLabel)
        
        #Define dieLabel
        self.dieLabel = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.dieLabel.setObjectName("dieLabel")
        self.waferLabelLayout.addWidget(self.dieLabel)
        
        #Define initialsLabel
        self.initialsLabel = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.initialsLabel.setObjectName("initialsLabel")
        self.waferLabelLayout.addWidget(self.initialsLabel)
        
        #Define bookLabel
        self.bookLabel = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.bookLabel.setObjectName("bookLabel")
        self.waferLabelLayout.addWidget(self.bookLabel)
        
        #Define pageLabel
        self.pageLabel = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.pageLabel.setObjectName("pageLabel")
        self.waferLabelLayout.addWidget(self.pageLabel)
        
        #Define pathInput
        #This placeholder text is unique to MY machine and will not work for when the GUI runs on the lab computers
        self.pathInput = QtWidgets.QLineEdit(self.centralwidget, placeholderText = 'C:\\Users\\Steph')
        self.pathInput.setGeometry(QtCore.QRect(110, 20, 581, 22))
        self.pathInput.setObjectName("pathInput")
        
        #Define pathLabel
        self.pathLabel = QtWidgets.QLabel(self.centralwidget)
        self.pathLabel.setGeometry(QtCore.QRect(60, 20, 41, 20))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.pathLabel.setFont(font)
        self.pathLabel.setObjectName("pathLabel")
        
        #Define fluxLabelLayout
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(10, 150, 71, 81))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.fluxLabelLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.fluxLabelLayout.setContentsMargins(0, 0, 0, 0)
        self.fluxLabelLayout.setObjectName("fluxLabelLayout")
        
        #Define fromFluxLabel
        self.fromFluxLabel = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.fromFluxLabel.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.fromFluxLabel.setObjectName("fromFluxLabel")
        self.fluxLabelLayout.addWidget(self.fromFluxLabel)
        
        #Define toFluxLabel
        self.toFluxLabel = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.toFluxLabel.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.toFluxLabel.setObjectName("toFluxLabel")
        self.fluxLabelLayout.addWidget(self.toFluxLabel)
        
        #Define stepsFluxLabel
        self.stepsFluxLabel = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.stepsFluxLabel.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.stepsFluxLabel.setObjectName("stepsFluxLabel")
        self.fluxLabelLayout.addWidget(self.stepsFluxLabel)
        
        #Define multimeterLabelLayout
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(490, 150, 71, 80))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.multimeterLabelLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.multimeterLabelLayout.setContentsMargins(0, 0, 0, 0)
        self.multimeterLabelLayout.setObjectName("multimeterLabelLayout")
        
        #Define tSettleLabel
        self.tSettleLabel = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.tSettleLabel.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.tSettleLabel.setObjectName("tSettleLabel")
        self.multimeterLabelLayout.addWidget(self.tSettleLabel)
        
        #Define NPLCLabel
        self.NPLCLabel = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.NPLCLabel.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.NPLCLabel.setObjectName("NPLCLabel")
        self.multimeterLabelLayout.addWidget(self.NPLCLabel)
        
        #Define rangeLabel
        self.rangeLabel = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.rangeLabel.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.rangeLabel.setObjectName("rangeLabel")
        self.multimeterLabelLayout.addWidget(self.rangeLabel)
        
        #Define biasLabelLayout
        self.verticalLayoutWidget_3 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_3.setGeometry(QtCore.QRect(250, 150, 71, 80))
        self.verticalLayoutWidget_3.setObjectName("verticalLayoutWidget_3")
        self.biasLabelLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_3)
        self.biasLabelLayout.setContentsMargins(0, 0, 0, 0)
        self.biasLabelLayout.setObjectName("biasLabelLayout")
        
        #Define fromBiasLabel
        self.fromBiasLabel = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        self.fromBiasLabel.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.fromBiasLabel.setObjectName("fromBiasLabel")
        self.biasLabelLayout.addWidget(self.fromBiasLabel)
        
        #Define toBiasLabel
        self.toBiasLabel = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        self.toBiasLabel.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.toBiasLabel.setObjectName("toBiasLabel")
        self.biasLabelLayout.addWidget(self.toBiasLabel)
        
        #Define stepsBiasLabel
        self.stepsBiasLabel = QtWidgets.QLabel(self.verticalLayoutWidget_3)
        self.stepsBiasLabel.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.stepsBiasLabel.setObjectName("stepsBiasLabel")
        self.biasLabelLayout.addWidget(self.stepsBiasLabel)
        
        #Define fluxInputLayout
        self.verticalLayoutWidget_4 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_4.setGeometry(QtCore.QRect(90, 150, 101, 82))
        self.verticalLayoutWidget_4.setObjectName("verticalLayoutWidget_4")
        self.fluxInputLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_4)
        self.fluxInputLayout.setContentsMargins(0, 0, 0, 0)
        self.fluxInputLayout.setObjectName("fluxInputLayout")
        
        #Define fromFluxInput
        self.fromFluxInput = QtWidgets.QLineEdit(self.verticalLayoutWidget_4)
        self.fromFluxInput.setObjectName("fromFluxInput")
        self.fluxInputLayout.addWidget(self.fromFluxInput)
        
        #Define toFluxInput
        self.toFluxInput = QtWidgets.QLineEdit(self.verticalLayoutWidget_4)
        self.toFluxInput.setObjectName("toFluxInput")
        self.fluxInputLayout.addWidget(self.toFluxInput)
        
        #Define stepsFluxInput
        self.stepsFluxInput = QtWidgets.QLineEdit(self.verticalLayoutWidget_4)
        self.stepsFluxInput.setObjectName("stepsFluxInput")
        self.fluxInputLayout.addWidget(self.stepsFluxInput)
        
        #Define biasInputLayout
        self.verticalLayoutWidget_6 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_6.setGeometry(QtCore.QRect(330, 150, 101, 82))
        self.verticalLayoutWidget_6.setObjectName("verticalLayoutWidget_6")
        self.biasInputLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_6)
        self.biasInputLayout.setContentsMargins(0, 0, 0, 0)
        self.biasInputLayout.setObjectName("biasInputLayout")
        
        #Define fromBiasInput
        self.fromBiasInput = QtWidgets.QLineEdit(self.verticalLayoutWidget_6)
        self.fromBiasInput.setObjectName("fromBiasInput")
        self.biasInputLayout.addWidget(self.fromBiasInput)
        
        #Define toBiasInput
        self.toBiasInput = QtWidgets.QLineEdit(self.verticalLayoutWidget_6)
        self.toBiasInput.setObjectName("toBiasInput")
        self.biasInputLayout.addWidget(self.toBiasInput)
        
        #Define stepsBiasInput
        self.stepsBiasInput = QtWidgets.QLineEdit(self.verticalLayoutWidget_6)
        self.stepsBiasInput.setObjectName("stepsBiasInput")
        self.biasInputLayout.addWidget(self.stepsBiasInput)
        
        #Define multimeterInputLayout
        self.verticalLayoutWidget_7 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_7.setGeometry(QtCore.QRect(570, 150, 101, 82))
        self.verticalLayoutWidget_7.setObjectName("verticalLayoutWidget_7")
        self.multimeterInputLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_7)
        self.multimeterInputLayout.setContentsMargins(0, 0, 0, 0)
        self.multimeterInputLayout.setObjectName("multimeterInputLayout")
        
        #Define tSettleInput
        self.tSettleInput = QtWidgets.QLineEdit(self.verticalLayoutWidget_7)
        self.tSettleInput.setObjectName("tSettleInput")
        self.multimeterInputLayout.addWidget(self.tSettleInput)
        
        #Define NPLCInput
        self.NPLCInput = QtWidgets.QLineEdit(self.verticalLayoutWidget_7)
        self.NPLCInput.setObjectName("NPLCInput")
        self.multimeterInputLayout.addWidget(self.NPLCInput)
        
        #Define rangeInput
        self.rangeInput = QtWidgets.QLineEdit(self.verticalLayoutWidget_7)
        self.rangeInput.setObjectName("rangeInput")
        self.multimeterInputLayout.addWidget(self.rangeInput)
        
        #Define fluxLabel
        self.fluxLabel = QtWidgets.QLabel(self.centralwidget)
        self.fluxLabel.setGeometry(QtCore.QRect(80, 130, 81, 20))
        self.fluxLabel.setObjectName("fluxLabel")
        
        #Define biasLabel
        self.biasLabel = QtWidgets.QLabel(self.centralwidget)
        self.biasLabel.setGeometry(QtCore.QRect(320, 130, 81, 20))
        self.biasLabel.setObjectName("biasLabel")
        
        #Define multimeterLabel
        self.multimeterLabel = QtWidgets.QLabel(self.centralwidget)
        self.multimeterLabel.setGeometry(QtCore.QRect(520, 130, 151, 20))
        self.multimeterLabel.setObjectName("multimeterLabel")
        
        #Define vPhiNoiseSliderLayout
        self.verticalLayoutWidget_5 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_5.setGeometry(QtCore.QRect(30, 250, 31, 131))
        self.verticalLayoutWidget_5.setObjectName("verticalLayoutWidget_5")
        self.vPhiNoiseSliderLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_5)
        self.vPhiNoiseSliderLayout.setContentsMargins(0, 0, 0, 0)
        self.vPhiNoiseSliderLayout.setObjectName("vPhiNoiseSliderLayout")
        
        #Define VPhiIVSlider
        self.VPhiIVSlider = QtWidgets.QSlider(self.verticalLayoutWidget_5)
        #Set Max at 1 so it acts as a toggle
        self.VPhiIVSlider.setMaximum(1)
        self.VPhiIVSlider.setOrientation(QtCore.Qt.Vertical)
        self.VPhiIVSlider.setObjectName("VPhiIVSlider")
        self.vPhiNoiseSliderLayout.addWidget(self.VPhiIVSlider)
        
        #Define noiseNoNoiseSlider
        self.noiseNoNoiseSlider = QtWidgets.QSlider(self.verticalLayoutWidget_5)
        self.noiseNoNoiseSlider.setMaximum(1)
        self.noiseNoNoiseSlider.setOrientation(QtCore.Qt.Vertical)
        self.noiseNoNoiseSlider.setObjectName("noiseNoNoiseSlider")
        self.vPhiNoiseSliderLayout.addWidget(self.noiseNoNoiseSlider)
        
        #Define vPhiIVLabelLayout
        self.verticalLayoutWidget_8 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_8.setGeometry(QtCore.QRect(70, 250, 61, 61))
        self.verticalLayoutWidget_8.setObjectName("verticalLayoutWidget_8")
        self.vPhiIVLabelLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_8)
        self.vPhiIVLabelLayout.setContentsMargins(0, 0, 0, 0)
        self.vPhiIVLabelLayout.setObjectName("vPhiIVLabelLayout")
        
        #Define vPhiLabel
        self.VPhiLabel = QtWidgets.QLabel(self.verticalLayoutWidget_8)
        self.VPhiLabel.setObjectName("VPhiLabel")
        self.vPhiIVLabelLayout.addWidget(self.VPhiLabel)
        
        #Define IVLabel
        self.IVLabel = QtWidgets.QLabel(self.verticalLayoutWidget_8)
        self.IVLabel.setObjectName("IVLabel")
        self.vPhiIVLabelLayout.addWidget(self.IVLabel)
        
        #Define noiseNoNoiseLabelLayout
        self.verticalLayoutWidget_9 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_9.setGeometry(QtCore.QRect(70, 320, 61, 61))
        self.verticalLayoutWidget_9.setObjectName("verticalLayoutWidget_9")
        self.noiseNoNoiseLabelLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_9)
        self.noiseNoNoiseLabelLayout.setContentsMargins(0, 0, 0, 0)
        self.noiseNoNoiseLabelLayout.setObjectName("noiseNoNoiseLabelLayout")
        
        #Define noiseLabel
        self.noiseLabel = QtWidgets.QLabel(self.verticalLayoutWidget_9)
        self.noiseLabel.setObjectName("noiseLabel")
        self.noiseNoNoiseLabelLayout.addWidget(self.noiseLabel)
        
        #Define noNoiseLabel
        self.noNoiseLabel = QtWidgets.QLabel(self.verticalLayoutWidget_9)
        self.noNoiseLabel.setObjectName("noNoiseLabel")
        self.noiseNoNoiseLabelLayout.addWidget(self.noNoiseLabel)
        
        #Define slopeSlider
        self.slopeSlider = QtWidgets.QSlider(self.centralwidget)
        self.slopeSlider.setGeometry(QtCore.QRect(180, 280, 22, 61))
        self.slopeSlider.setMaximum(1)
        self.slopeSlider.setOrientation(QtCore.Qt.Vertical)
        self.slopeSlider.setObjectName("slopeSlider")
        
        #Define derivativeLabelLayout
        self.verticalLayoutWidget_10 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_10.setGeometry(QtCore.QRect(210, 279, 106, 61))
        self.verticalLayoutWidget_10.setObjectName("verticalLayoutWidget_10")
        self.derivativeLabelLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_10)
        self.derivativeLabelLayout.setContentsMargins(0, 0, 0, 0)
        self.derivativeLabelLayout.setObjectName("derivativeLabelLayout")
        
        #Define withDerivativeLabel
        self.withDerivativeLabel = QtWidgets.QLabel(self.verticalLayoutWidget_10)
        self.withDerivativeLabel.setObjectName("withDerivativeLabel")
        self.derivativeLabelLayout.addWidget(self.withDerivativeLabel)
        
        #Define withoutDerivativeLabel
        self.withoutDerivativeLabel = QtWidgets.QLabel(self.verticalLayoutWidget_10)
        self.withoutDerivativeLabel.setObjectName("withoutDerivativeLabel")
        self.derivativeLabelLayout.addWidget(self.withoutDerivativeLabel)
        
        #Define slopeLabel
        self.slopeLabel = QtWidgets.QLabel(self.centralwidget)
        self.slopeLabel.setGeometry(QtCore.QRect(180, 250, 55, 16))
        self.slopeLabel.setObjectName("slopeLabel")
        
        #Define rFluxLabelLayout
        self.verticalLayoutWidget_11 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_11.setGeometry(QtCore.QRect(360, 270, 81, 111))
        self.verticalLayoutWidget_11.setObjectName("verticalLayoutWidget_11")
        self.rFluxLabelLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_11)
        self.rFluxLabelLayout.setContentsMargins(0, 0, 0, 0)
        self.rFluxLabelLayout.setObjectName("rFluxLabelLayout")
        
        #Define rFluxLabel
        self.rFluxLabel = QtWidgets.QLabel(self.verticalLayoutWidget_11)
        self.rFluxLabel.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.rFluxLabel.setObjectName("rFluxLabel")
        self.rFluxLabelLayout.addWidget(self.rFluxLabel)
        
        #Define rBiasLabel
        self.rBiasLabel = QtWidgets.QLabel(self.verticalLayoutWidget_11)
        self.rBiasLabel.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.rBiasLabel.setObjectName("rBiasLabel")
        self.rFluxLabelLayout.addWidget(self.rBiasLabel)
        
        #Define gainLabel
        self.gainLabel = QtWidgets.QLabel(self.verticalLayoutWidget_11)
        self.gainLabel.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.gainLabel.setObjectName("gainLabel")
        self.rFluxLabelLayout.addWidget(self.gainLabel)
        
        #Define ditherLabel
        self.ditherLabel = QtWidgets.QLabel(self.verticalLayoutWidget_11)
        self.ditherLabel.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.ditherLabel.setObjectName("ditherLabel")
        self.rFluxLabelLayout.addWidget(self.ditherLabel)
        
        #Define rFluxInputLayout
        self.verticalLayoutWidget_12 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_12.setGeometry(QtCore.QRect(450, 270, 111, 82))
        self.verticalLayoutWidget_12.setObjectName("verticalLayoutWidget_12")
        self.rFluxInputLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_12)
        self.rFluxInputLayout.setContentsMargins(0, 0, 0, 0)
        self.rFluxInputLayout.setObjectName("rFluxInputLayout")
        
        #Define rFluxInput
        self.rFluxInput = QtWidgets.QLineEdit(self.verticalLayoutWidget_12)
        self.rFluxInput.setObjectName("rFluxInput")
        self.rFluxInputLayout.addWidget(self.rFluxInput)
        
        #Defien rBiasInput
        self.rBiasInput = QtWidgets.QLineEdit(self.verticalLayoutWidget_12)
        self.rBiasInput.setObjectName("rBiasInput")
        self.rFluxInputLayout.addWidget(self.rBiasInput)
        
        #Define gainInput
        self.gainInput = QtWidgets.QLineEdit(self.verticalLayoutWidget_12)
        self.gainInput.setObjectName("gainInput")
        self.rFluxInputLayout.addWidget(self.gainInput)
        
        #define rFluxDefaultLabelLayout
        self.verticalLayoutWidget_13 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_13.setGeometry(QtCore.QRect(580, 270, 96, 80))
        self.verticalLayoutWidget_13.setObjectName("verticalLayoutWidget_13")
        self.rFluxDefaultLabelLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_13)
        self.rFluxDefaultLabelLayout.setContentsMargins(0, 0, 0, 0)
        self.rFluxDefaultLabelLayout.setObjectName("rFluxDefaultLabelLayout")
        
        #Define rFluxDefaultLabel
        self.rFluxDefaultLabel = QtWidgets.QLabel(self.verticalLayoutWidget_13)
        self.rFluxDefaultLabel.setObjectName("rFluxDefaultLabel")
        self.rFluxDefaultLabelLayout.addWidget(self.rFluxDefaultLabel)
        
        #Define rBiasDefaultLabel
        self.rBiasDefaultLabel = QtWidgets.QLabel(self.verticalLayoutWidget_13)
        self.rBiasDefaultLabel.setObjectName("rBiasDefaultLabel")
        self.rFluxDefaultLabelLayout.addWidget(self.rBiasDefaultLabel)
        
        #Define gainDefaultLabel
        self.gainDefaultLabel = QtWidgets.QLabel(self.verticalLayoutWidget_13)
        self.gainDefaultLabel.setObjectName("gainDefaultLabel")
        self.rFluxDefaultLabelLayout.addWidget(self.gainDefaultLabel)
        
        #Define ditherSlider
        self.ditherSlider = QtWidgets.QSlider(self.centralwidget)
        self.ditherSlider.setMaximum(1)
        self.ditherSlider.setGeometry(QtCore.QRect(450, 360, 111, 22))
        self.ditherSlider.setOrientation(QtCore.Qt.Horizontal)
        self.ditherSlider.setObjectName("ditherSlider")
        
        #Define ditherOneLabel
        self.ditherOneLabel = QtWidgets.QLabel(self.centralwidget)
        self.ditherOneLabel.setGeometry(QtCore.QRect(450, 380, 16, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.ditherOneLabel.setFont(font)
        self.ditherOneLabel.setObjectName("ditherOneLabel")
        
        #Define ditherTwoLabel
        self.ditherTwoLabel = QtWidgets.QLabel(self.centralwidget)
        self.ditherTwoLabel.setGeometry(QtCore.QRect(550, 380, 16, 16))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.ditherTwoLabel.setFont(font)
        self.ditherTwoLabel.setObjectName("ditherTwoLabel")
        
        #Define errorInInputLayout
        self.horizontalLayoutWidget_3 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget_3.setGeometry(QtCore.QRect(20, 440, 160, 31))
        self.horizontalLayoutWidget_3.setObjectName("horizontalLayoutWidget_3")
        self.errorInInputLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_3)
        self.errorInInputLayout.setContentsMargins(0, 0, 0, 0)
        self.errorInInputLayout.setObjectName("errorInInputLayout")
        
        #Define errorInCheckBox
        self.errorInCheckBox = QtWidgets.QCheckBox(self.horizontalLayoutWidget_3)
        self.errorInCheckBox.setText("")
        self.errorInCheckBox.setObjectName("errorInCheckBox")
        self.errorInInputLayout.addWidget(self.errorInCheckBox)
        
        #Define errorInSpinBox
        self.errorInSpinBox = QtWidgets.QSpinBox(self.horizontalLayoutWidget_3)
        self.errorInSpinBox.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.errorInSpinBox.setObjectName("errorInSpinBox")
        self.errorInInputLayout.addWidget(self.errorInSpinBox)
        
        #Define stopButton
        self.startStopButton = QtWidgets.QPushButton(self.centralwidget,
                                                     clicked = lambda: startStopButton_clicked(self))
        self.startStopButton.setGeometry(QtCore.QRect(540, 450, 141, 61))
        self.startStopButton.setIconSize(QtCore.QSize(20, 20))
        self.startStopButton.setObjectName("startStopButton")
        
        #Define errorInLabel
        self.errorInLabel = QtWidgets.QLabel(self.centralwidget)
        self.errorInLabel.setGeometry(QtCore.QRect(20, 400, 55, 16))
        self.errorInLabel.setObjectName("errorInLabel")
        
        #Define errorOutLabel
        self.errorOutLabel = QtWidgets.QLabel(self.centralwidget)
        self.errorOutLabel.setGeometry(QtCore.QRect(250, 400, 55, 16))
        self.errorOutLabel.setObjectName("errorOutLabel")
        
        #Define errorInLabelLayout
        self.horizontalLayoutWidget_5 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget_5.setGeometry(QtCore.QRect(20, 420, 160, 21))
        self.horizontalLayoutWidget_5.setObjectName("horizontalLayoutWidget_5")
        self.errorInLabelLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_5)
        self.errorInLabelLayout.setContentsMargins(0, 0, 0, 0)
        self.errorInLabelLayout.setObjectName("errorInLabelLayout")
        
        #Define errorInStatusLabel
        self.errorInStatusLabel = QtWidgets.QLabel(self.horizontalLayoutWidget_5)
        self.errorInStatusLabel.setObjectName("errorInStatusLabel")
        self.errorInLabelLayout.addWidget(self.errorInStatusLabel)
        
        #Define errorInCodeLabel
        self.errorInCodeLabel = QtWidgets.QLabel(self.horizontalLayoutWidget_5)
        self.errorInCodeLabel.setObjectName("errorInCodeLabel")
        self.errorInLabelLayout.addWidget(self.errorInCodeLabel)
        
        #Define errorInTextEdit
        self.errorInTextEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.errorInTextEdit.setGeometry(QtCore.QRect(20, 490, 161, 51))
        self.errorInTextEdit.setObjectName("errorInTextEdit")
        
        #Define errorInSourceLabel
        self.errorInSourceLabel = QtWidgets.QLabel(self.centralwidget)
        self.errorInSourceLabel.setGeometry(QtCore.QRect(20, 470, 55, 16))
        self.errorInSourceLabel.setObjectName("errorInSourceLabel")
        
        #Define errorOutLabelLayout
        self.horizontalLayoutWidget_6 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget_6.setGeometry(QtCore.QRect(250, 420, 160, 21))
        self.horizontalLayoutWidget_6.setObjectName("horizontalLayoutWidget_6")
        self.errorOutLabelLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_6)
        self.errorOutLabelLayout.setContentsMargins(0, 0, 0, 0)
        self.errorOutLabelLayout.setObjectName("errorOutLabelLayout")
        
        #Define errorOutStatusLabel
        self.errorOutStatusLabel = QtWidgets.QLabel(self.horizontalLayoutWidget_6)
        self.errorOutStatusLabel.setObjectName("errorOutStatusLabel")
        self.errorOutLabelLayout.addWidget(self.errorOutStatusLabel)
        
        #Define errorOutCodeLabel
        self.errorOutCodeLabel = QtWidgets.QLabel(self.horizontalLayoutWidget_6)
        self.errorOutCodeLabel.setObjectName("errorOutCodeLabel")
        self.errorOutLabelLayout.addWidget(self.errorOutCodeLabel)
        
        #Define errorOutInputLayout
        self.horizontalLayoutWidget_4 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget_4.setGeometry(QtCore.QRect(250, 440, 160, 31))
        self.horizontalLayoutWidget_4.setObjectName("horizontalLayoutWidget_4")
        self.errorOutInputLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_4)
        self.errorOutInputLayout.setContentsMargins(0, 0, 0, 0)
        self.errorOutInputLayout.setObjectName("errorOutInputLayout")
        
        #Define errorOutCheckBox
        self.errorOutCheckBox = QtWidgets.QCheckBox(self.horizontalLayoutWidget_4)
        self.errorOutCheckBox.setText("")
        self.errorOutCheckBox.setObjectName("errorOutCheckBox")
        self.errorOutInputLayout.addWidget(self.errorOutCheckBox)
        
        #Define errorOutSpinBox
        self.errorOutSpinBox = QtWidgets.QSpinBox(self.horizontalLayoutWidget_4)
        self.errorOutSpinBox.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.errorOutSpinBox.setObjectName("errorOutSpinBox")
        self.errorOutInputLayout.addWidget(self.errorOutSpinBox)
        
        #Define errorOutTextEdit
        self.errorOutTextEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.errorOutTextEdit.setGeometry(QtCore.QRect(250, 490, 161, 51))
        self.errorOutTextEdit.setObjectName("errorOutTextEdit")
        
        #Define errorOutSourceLabel
        self.errorOutSourceLabel = QtWidgets.QLabel(self.centralwidget)
        self.errorOutSourceLabel.setGeometry(QtCore.QRect(250, 470, 55, 16))
        self.errorOutSourceLabel.setObjectName("errorOutSourceLabel")
           
        #Create a function to change the text of the button according to its clicked status
        def startStopButtonTextChange(self):
            if self.startStopButton is not None:
                text = self.startStopButton.text()
                self.startStopButton.setText("STOP" if text == "START" else "START")
        
        #Create a function to get the current date for file purposes
        def getDate():
            #Use the method datetime.now() to get the current date and time
            now = datetime.now()
            #Format the retrieved date and time
            getDate.dt_string = now.strftime("%Y%m%d %H%M%S")
            return
        
        """      
        def kalamariLoop(self):
            
            #Create multidimensional array
            kalamariValues = {  }
            
            #Create outer loop
            a = yPointsArray
            for a in range (int(self.toBiasInput.text())):
                #Call Thomas's SetDACVoltage function
                #Create inner loop
                b = xPointsArray
                for b in range (int(self.toFluxInput.text())):
            
                    #Create dither check
                    if self.ditherSlider.valueChanged(1):
                        ditherValue = 2
                        #Call Thomas's DitherRamp function
                    else:
                        ditherValue = 1
                    if self.noiseSlider.valueChanged(1):
                        #Do noise stuff
                    else:
                        #Do not do noise stuff
            #Append values from each x sweep to kalamariValues
            #Add the array to a txt file formatted horizontally
        """
            
                    
        def startStopButton_clicked(self): 
            #Print message to test to see if the button is actually working
            print ("The button is working")
            #Call the function to change the text
            startStopButtonTextChange(self)
            
            def convertXPoints(self):
                #Write a for loop to convert each element in the xPointsArray from microamps to microvolts
                for i in xPointsArray:
                    xVoltage = i * int(self.rFluxInput.text())
                    xPointsArray[i] = xVoltage
                    
            def convertYPoints(self):
                #Write a for loop to convert each element in the yPointsArray from microamps to microvolts
                for i in yPointsArray:
                    yVoltage = i * int(self.rBiasInput.text())
                    yPointsArray[i] = yVoltage
            
            #Create a function to get the points for the graph
            def getXPoints(self):
                #Calculate the range by subtracting the beginning value from the end value
                fluxRange = int(self.toFluxInput.text()) - int(self.fromFluxInput.text())
                #Calculates the interval by dividing the range by the number of steps
                fluxInterval = fluxRange / int(self.stepsFluxInput.text())
                #Adding one sets the first step as step 0
                stepsFluxInput = int(self.stepsFluxInput.text()) + 1
                #Set start point
                fluxStart = int(self.fromFluxInput.text())
                #Create an array (I made it a global variable to make for easy passing between functions)
                global xPointsArray
                xPointsArray = []
                #Append the previously made array with a for loop calculating each point on the x axis
                for i in range(stepsFluxInput):
                    xPointsArray.append(fluxStart)
                    fluxStart = fluxStart + fluxInterval
                #Confirm that the calculation was made
                print (xPointsArray)
                #Call the function to convert each xpoint from a microamp to a microvolt
                convertXPoints()
                return xPointsArray
            
            def getYPoints(self):
                #Calculate the range by subtracting the beginning value from the end value
                biasRange = int(self.toBiasInput.text()) - int(self.fromBiasInput.text())
                #Calculates the interval by dividing the range by the number of steps
                biasInterval = biasRange / int(self.stepsBiasInput.text())
                #Adding one sets the first step as step 0
                stepsBiasInput = int(self.stepsBiasInput.text()) + 1
                #Set start point
                biasStart = int(self.fromBiasInput.text())
                #Create an array
                global yPointsArray
                yPointsArray = []
                #Append the previously made array with a for loop calculating each point on the y axis
                for i in range(stepsBiasInput):
                    yPointsArray.append(biasStart)
                    biasStart = biasStart + biasInterval
                #Confirm that the calculation was made
                print (yPointsArray)
                #Call the function to convert each ypoint from a microamp to a microvolt
                convertYPoints()
                return yPointsArray
                        
            
            #Call the function to get the date so we can title the file
            getDate()
            #Get the file path as either the placeholder text or the user input
            filePath = self.pathInput.text() or self.pathInput.placeholderText()
            #This variable should remain the same even when brought to the mac
            fileName = str("Kalamari Data " + str(self.waferInput.text()) + " " + str(self.dieInput.text()) + " " + getDate.dt_string)
            #Joining both the path and the fileName 
            fullPath = os.path.join(filePath, fileName+".txt")
            #For now I have my path directory written so that it will actually appear on my computer
            #When this is brought to run on one of the Macs, the file will be the inputted path directory + the fileName
            k = open(fullPath, 'w')
            #Test to see if stuff is actually being written to the file by writing the first line
            k.write("Kalamari Generated Noise File\n")
            #Close the file
            k.close()
            #Open it to append
            k = open(fullPath, 'a')
            #Write the second line
            k.write("Date: " + getDate.dt_string + " Wafer-Die: " + self.waferInput.text() + self.dieInput.text() + " Initials: " + self.initialsInput.text() + " Book/Page: " + self.bookInput.text() + "/" + self.pageInput.text() + "\n")
            #Third line is just the one string
            k.write("Paramters: \n")
            #Fourth line is everything pertaining to flux
            k.write("Flux From: " + self.fromFluxInput.text() + " Flux To: " + self.toFluxInput.text() + " Flux Steps: " + self.stepsFluxInput.text() + " Flux Resistance(RFlux): " + self.rFluxInput.text() + "\n")
            #Fifth line is everything pertaining to bias
            k.write("Bias From: " + self.fromBiasInput.text() + " Bias To: " + self.toBiasInput.text() + " Bias Steps: " + self.stepsBiasInput.text() + " Bias Resistance(RBias): " + self.rBiasInput.text() + "\n")
            #Sixth line is everything pertaining to multimeter settings. 
            ##THE CODE IS ANGRY RIGHT NOW BECAUSE THE VARIABLE DITHERVALUE IS STILL COMMENTED OUT FROM ABOVE
            #k.write("Tsettle: " + self.tSettleInput.text() + " Gain: " + self.gainInput.text() + " NPLC: " + self.NPLCInput.text() + " Range: " + self.rangeInput.text() + " Dither: " + ditherValue + "\n")
            #Seventh line defines what type of graph it is
            ##I STILL HAVE NOT WRITTEN THE CODE FOR THE VPHI IV TOGGLE
            k.write("Curve Type: \n" )
            #Formatting the next line
            ##SOMETHING WENT TERRIBLY WRONG HERE
            k.write("I_Flux          I_Bias          Voltage          dV/dI F(\omega)          Rd(\omega)          Sv          Si")
            #Close the file once you are done appending
            k.close()
            #This will call the function to run the Kalamari Loop
            getXPoints(self)
            getYPoints(self)
            
        
        #Create menubars
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 748, 26))
        self.menubar.setObjectName("menubar")
        self.menuMain = QtWidgets.QMenu(self.menubar)
        self.menuMain.setObjectName("menuMain")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menuMain.menuAction())
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "DAQ"))
        self.waferLabel.setText(_translate("MainWindow", "Wafer:"))
        self.dieLabel.setText(_translate("MainWindow", "Die:"))
        self.initialsLabel.setText(_translate("MainWindow", "Initials:"))
        self.bookLabel.setText(_translate("MainWindow", "Book:"))
        self.pageLabel.setText(_translate("MainWindow", "Page:"))
        self.pathLabel.setText(_translate("MainWindow", "Path"))
        self.fromFluxLabel.setText(_translate("MainWindow", "From:"))
        self.toFluxLabel.setText(_translate("MainWindow", "To:"))
        self.stepsFluxLabel.setText(_translate("MainWindow", "# Steps:"))
        self.tSettleLabel.setText(_translate("MainWindow", "TSettle:"))
        self.NPLCLabel.setText(_translate("MainWindow", "NPLC:"))
        self.rangeLabel.setText(_translate("MainWindow", "Range:"))
        self.fromBiasLabel.setText(_translate("MainWindow", "From:"))
        self.toBiasLabel.setText(_translate("MainWindow", "To:"))
        self.stepsBiasLabel.setText(_translate("MainWindow", "# Steps:"))
        self.fluxLabel.setText(_translate("MainWindow", "Flux(µAmps)"))
        self.biasLabel.setText(_translate("MainWindow", "Bias(µAmps)"))
        self.multimeterLabel.setText(_translate("MainWindow", "Digital Multimeter Settings"))
        self.VPhiLabel.setText(_translate("MainWindow", "VPhi"))
        self.IVLabel.setText(_translate("MainWindow", "IV"))
        self.noiseLabel.setText(_translate("MainWindow", "Noise"))
        self.noNoiseLabel.setText(_translate("MainWindow", "No Noise"))
        self.withDerivativeLabel.setText(_translate("MainWindow", "With Derivative"))
        self.withoutDerivativeLabel.setText(_translate("MainWindow", "Without Derivative"))
        self.slopeLabel.setText(_translate("MainWindow", "Slope"))
        self.rFluxLabel.setText(_translate("MainWindow", "R-flux:"))
        self.rBiasLabel.setText(_translate("MainWindow", "R-Bias:"))
        self.gainLabel.setText(_translate("MainWindow", "Gain:"))
        self.ditherLabel.setText(_translate("MainWindow", "Dither:"))
        self.rFluxDefaultLabel.setText(_translate("MainWindow", "(Default: 21333)"))
        self.rBiasDefaultLabel.setText(_translate("MainWindow", "(Default: 10073)"))
        self.gainDefaultLabel.setText(_translate("MainWindow", "(Default: 98)"))
        self.ditherOneLabel.setText(_translate("MainWindow", "1"))
        self.ditherTwoLabel.setText(_translate("MainWindow", "2"))
        self.startStopButton.setText(_translate("MainWindow", "START"))
        self.errorInLabel.setText(_translate("MainWindow", "Error in"))
        self.errorOutLabel.setText(_translate("MainWindow", "Error out"))
        self.errorInStatusLabel.setText(_translate("MainWindow", "Status"))
        self.errorInCodeLabel.setText(_translate("MainWindow", "Code"))
        self.errorInSourceLabel.setText(_translate("MainWindow", "Source"))
        self.errorOutStatusLabel.setText(_translate("MainWindow", "Status"))
        self.errorOutCodeLabel.setText(_translate("MainWindow", "Code"))
        self.errorOutSourceLabel.setText(_translate("MainWindow", "Source"))
        self.menuMain.setTitle(_translate("MainWindow", "Main"))
        
        
        


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
